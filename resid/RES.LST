Turbo Assembler	 Version 4.1	    03/07/22 18:21:26	    Page 1
res.asm



      1	0000			     .model tiny
      2
      3	0000			     .code
      4				     org 100h
      5				     locals @@
      6
      7	0100			     start:
      8	0100  EB 1B 90			     jmp main
      9
     10	0103			     new09	 proc
     11	0103  06 50				 push es ax  ; TODO check if there are more unused
     12
     13	0105  E4 60				 in al,	60h  ; get pressed button from keyboard
     14	0107  3C 02				 cmp al, 2   ; if key is not 1 then do nothing
     15	0109  75 0B				 jne @@old_int
     16
     17	010B  B8 B800				 mov ax, 0b800h
     18	010E  8E C0				 mov es, ax
     19	0110  B0 FF				 mov al, 0FFh
     20	0112  26: A2 03FC			 mov es:[(80*6+30)*2], al
     21
     22	0116			     @@old_int:
     23	0116  58 07				 pop ax	es   ; TODO check if list is fine
     24	0118  EA				 db 0eah     ; opcode of jmp far
     25	0119  00000000		     old09	 dd 0	     ; place for ptr to	prev int
     26
     27	011D			     new09	 endp
     28
     29
     30
     31
     32	011D			     main:
     33	011D  33 DB				 xor bx, bx
     34	011F  8E C3				 mov es, bx	 ; es =	0
     35	0121  BB 0024				 mov bx, 09h*4	 ; *4 is needed	because	every int ptr is 4 bytes
     36
     37						 ; saves 4 bytes of ptr	to int func
     38	0124  26: 8B 07				 mov ax, es:[bx]
     39	0127  2E: A3 0119r			 mov word ptr cs:[old09], ax
     40	012B  26: 8B 47	02			 mov ax, es:[bx+2]
     41	012F  2E: A3 011Br			 mov word ptr cs:[old09+2], ax
     42
     43	0133  B8 0103r				 mov ax, offset	new09
     44	0136  26: 89 07				 mov es:[bx], ax
     45	0139  26: 8C 4F	02			 mov es:[bx+2],	cs
     46
     47	013D  BA 011Dr				 mov dx, offset	main	 ; leaving as resident,	offset main is enough since	    +
     48				     interruption is before
     49	0140  D1 E2 D1 E2 D1 E2	D1+		 shl dx, 4
     50	      E2
     51	0148  42				 inc dx
     52	0149  B8 3100				 mov ax, 3100h
     53	014C  CD 21				 int 21h
     54
     55				     end start
Turbo Assembler	 Version 4.1	    03/07/22 18:21:26	    Page 2
Symbol Table




Symbol Name			  Type	 Value

??DATE				  Text	 "03/07/22"
??FILENAME			  Text	 "res	  "
??TIME				  Text	 "18:21:26"
??VERSION			  Number 040A
@32BIT				  Text	 0
@@OLD_INT			  Near	 DGROUP:0116
@CODE				  Text	 DGROUP
@CODESIZE			  Text	 0
@CPU				  Text	 0101H
@CURSEG				  Text	 _TEXT
@DATA				  Text	 DGROUP
@DATASIZE			  Text	 0
@FILENAME			  Text	 RES
@INTERFACE			  Text	 000H
@MODEL				  Text	 1
@STACK				  Text	 DGROUP
@WORDSIZE			  Text	 2
MAIN				  Near	 DGROUP:011D
NEW09				  Near	 DGROUP:0103
OLD09				  Dword	 DGROUP:0119
START				  Near	 DGROUP:0100

Groups & Segments		  Bit Size Align  Combine Class

DGROUP				  Group
  _DATA				  16  0000 Word	  Public  DATA
  _TEXT				  16  014E Word	  Public  CODE
